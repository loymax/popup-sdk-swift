//
// AuthorizationAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

extension SmartCommSDKAPI {


open class AuthorizationAPI {

    /**
     Авторизация в системе SMC
     
     - parameter generateAccessTokenRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func generateAccessToken(generateAccessTokenRequest: GenerateAccessTokenRequest? = nil, apiResponseQueue: DispatchQueue = SmartCommSDKAPI.apiResponseQueue, completion: @escaping ((_ data: GenerateAccessToken200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return generateAccessTokenWithRequestBuilder(generateAccessTokenRequest: generateAccessTokenRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Авторизация в системе SMC
     - POST /token
     - Получение токена для авторизации в системе SMC. Для использования скопируйте полученный токен из поля                `data.attributes.access_token` (Без `Bearer `!). Откройте модальное окно авторизаци (Зеленая кнопка `Authorize` выше),                вставьте его в поле значения и нажмите `Authorize`
     - Bearer Token:
       - type: http
       - name: bearerAuth
     - parameter generateAccessTokenRequest: (body)  (optional)
     - returns: RequestBuilder<GenerateAccessToken200Response> 
     */
    open class func generateAccessTokenWithRequestBuilder(generateAccessTokenRequest: GenerateAccessTokenRequest? = nil) -> RequestBuilder<GenerateAccessToken200Response> {
        let localVariablePath = "/token"
        let localVariableURLString = SmartCommSDKAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: generateAccessTokenRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GenerateAccessToken200Response>.Type = SmartCommSDKAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
}
