//
// SMCErrorDetails.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "SmartCommunicationsAPI.SMCErrorDetails")
public typealias SMCErrorDetails = SmartCommunicationsAPI.SMCErrorDetails

extension SmartCommunicationsAPI {

public struct SMCErrorDetails: Codable, JSONEncodable, Hashable {

    /** Код состояния HTTP. */
    public var status: Int?
    /** Сообщение об ошибке. */
    public var title: String?
    /** Дополнительная информация об ошибках валидации. Возможные ключи зависят от полей `requestBody` соответствующего эндпоинта.  */
    public var validation: [String: [String]]?

    public init(status: Int? = nil, title: String? = nil, validation: [String: [String]]? = nil) {
        self.status = status
        self.title = title
        self.validation = validation
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case status
        case title
        case validation
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(status, forKey: .status)
        try container.encodeIfPresent(title, forKey: .title)
        try container.encodeIfPresent(validation, forKey: .validation)
    }
}

}
