//
// SMCMeta.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "SmartCommunicationsAPI.SMCMeta")
public typealias SMCMeta = SmartCommunicationsAPI.SMCMeta

extension SmartCommunicationsAPI {

/** Метаинформация о коллекции.  */
public struct SMCMeta: Codable, JSONEncodable, Hashable {

    /** Количество элементов на текущей странице. */
    public var count: Int?
    /** Общее количество элементов. */
    public var total: Int?

    public init(count: Int? = nil, total: Int? = nil) {
        self.count = count
        self.total = total
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case count
        case total
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(count, forKey: .count)
        try container.encodeIfPresent(total, forKey: .total)
    }
}

}
